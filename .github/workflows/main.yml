name: CI

on:

  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-test:

    strategy:
      matrix:
#        os: [ubuntu-latest, macos-latest]
        os: [macos-latest]
        mlcomp: [mlkit]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup environment
        run: |
          echo "OS=$(uname -s | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "RUNHOME=$(echo $HOME)" >> $GITHUB_ENV

      - name: Install MLKit and smlpkg
        working-directory: ${{ env.RUNHOME }}
        run: |
          echo "[OS: $OS, HOME: $RUNHOME]"
          wget https://github.com/diku-dk/smlpkg/releases/download/v0.1.4/smlpkg-bin-dist-${{env.OS}}.tgz
          tar xzf smlpkg-bin-dist-${{env.OS}}.tgz
          echo "$HOME/smlpkg-bin-dist-${{env.OS}}/bin" >> $GITHUB_PATH
          wget https://github.com/melsman/mlkit/releases/download/v4.6.0/mlkit-bin-dist-${{env.OS}}.tgz
          tar xzf mlkit-bin-dist-${{env.OS}}.tgz
          echo "$HOME/mlkit-bin-dist-${{env.OS}}/bin" >> $GITHUB_PATH
          mkdir -p .mlkit
          echo "SML_LIB $HOME/mlkit-bin-dist-${{env.OS}}/lib/mlkit" > .mlkit/mlb-path-map

      - name: Check
        run: |
          mlkit --version
          smlpkg --version
          find -L /usr -name 'libssl.a'
          find -L /usr -name 'ssl.h' | grep 'openssl/ssl.h'

      - name: Build (linux)
        if: ${{ env.OS == 'linux' }}
        run: |
          SSL_LIBDIR=/usr/lib/openssl SSL_INCLUDEDIR=/usr/include/openssl MLKIT_INCLUDEDIR=$HOME/mlkit-bin-dist-${{env.OS}}/share/mlkit/include MLCOMP=${{ matrix.mlcomp }} make clean all

      - name: Run tests (linux)
        if: ${{ env.OS == 'linux' }}
        run: |
          SSL_LIBDIR=/usr/lib/openssl SSL_INCLUDEDIR=/usr/include/openssl MLKIT_INCLUDEDIR=$HOME/mlkit-bin-dist-${{env.OS}}/share/mlkit/include MLCOMP=${{ matrix.mlcomp }} make test

      - name: Build (macos)
        if: ${{ env.OS == 'darwin' }}
        run: |
          SSL_LIBDIR=/usr/local/opt/openssl/lib SSL_INCLUDEDIR=/usr/local/opt/openssl/include MLKIT_INCLUDEDIR=$HOME/mlkit-bin-dist-${{env.OS}}/share/mlkit/include MLCOMP=${{ matrix.mlcomp }} make clean all

      - name: Run tests (macos)
        if: ${{ env.OS == 'darwin' }}
        run: |
          SSL_LIBDIR=/usr/local/opt/openssl/lib SSL_INCLUDEDIR=/usr/local/opt/openssl/include MLKIT_INCLUDEDIR=$HOME/mlkit-bin-dist-${{env.OS}}/share/mlkit/include MLCOMP=${{ matrix.mlcomp }} make test
